package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.hardware.DcMotor;

@Autonomous(name="ForwardAndTurn", group="Robot")
public class RedA extends LinearOpMode {

    private DcMotor leftFrontDrive = null;
    private DcMotor rightFrontDrive = null;
    private DcMotor leftBackDrive = null;
    private DcMotor rightBackDrive = null;

    @Override
    public void runOpMode() {

        // Initialize the hardware variables. Note that the strings used here as parameters
        // to 'get' must correspond to the names assigned during robot configuration.
        leftFrontDrive  = hardwareMap.get(DcMotor.class, "LF");
        rightFrontDrive = hardwareMap.get(DcMotor.class, "RF");
        leftBackDrive  = hardwareMap.get(DcMotor.class, "LB");
        rightBackDrive = hardwareMap.get(DcMotor.class, "RB");

        // Most robots need the motor on one side to be reversed to drive forward.
        // Reverse the motor that runs backwards when connected directly to the battery.
        leftFrontDrive.setDirection(DcMotor.Direction.REVERSE);
        leftBackDrive.setDirection(DcMotor.Direction.REVERSE);
        rightFrontDrive.setDirection(DcMotor.Direction.FORWARD);
        rightBackDrive.setDirection(DcMotor.Direction.FORWARD);

        telemetry.addData("Status", "Initialized");
        telemetry.update();

        // Wait for the game to start (driver presses PLAY)
        waitForStart();

        // --- Drive Forward 4 feet ---
        // These values (power and duration) need to be determined experimentally for your robot.
        double drivePower = 0.5; // Example power
        long driveDurationMs = 2000; // Example duration for 4 feet

        setDrivePower(-drivePower, -drivePower, -drivePower, -drivePower);
        sleep(driveDurationMs);
        stopDriveMotors();

        //Shoot for 2 seconds
        sleep(2000);

        //Turn to face the goal again and end
        double turnPower = 0.5; // Example power
        long turnDurationMs = 60; // Example duration for turn

        // To turn left, the left side motors go forward and the right side motors go backward.
        setDrivePower(-turnPower, turnPower, -turnPower, turnPower);
        sleep(turnDurationMs);
        stopDriveMotors();

        //Go back to loading zone
        driveDurationMs = 3000; // Example duration for 6 feet


        setDrivePower(-drivePower, -drivePower, -drivePower, -drivePower);
        sleep(driveDurationMs);
        stopDriveMotors();

        //wait 5 seconds in the loading zone
        sleep(3000);


        //Go back forward to the shooting area

        setDrivePower(drivePower, drivePower, drivePower, drivePower);
        sleep(driveDurationMs);

        //Turn to face the goal again and end
        turnPower = 0.5; // Example power
        turnDurationMs = 50; // Example duration for turn

        // To turn right, the left side motors go forward and the right side motors go backward.
        setDrivePower(turnPower, -turnPower, turnPower, -turnPower);
        sleep(turnDurationMs);
        stopDriveMotors();



        telemetry.addData("Status", "Done");
        telemetry.update();
    }

    // Helper method to set power to all drive motors
    public void setDrivePower(double lfPower, double rfPower, double lbPower, double rbPower) {
        leftFrontDrive.setPower(lfPower);
        rightFrontDrive.setPower(rfPower);
        leftBackDrive.setPower(lbPower);
        rightBackDrive.setPower(rbPower);
    }

    // Helper method to stop all drive motors
    public void stopDriveMotors() {
        setDrivePower(0, 0, 0, 0);
    }
}
